{"version":3,"sources":["components/UserOrder/userOrder.module.css","components/UserOrder/index.js","containers/UserOrders/index.js"],"names":["module","exports","UserOrder","userOrder","props","ingrsInline","key","ingredients","push","concat","react_default","a","createElement","className","Styles","join","price","toFixed","UserOrders","this","onFetchOrders","token","userId","orders","map","order","id","loading","Spinner","Component","connect","state","ordrs","auth","dispatch","fetchOrders","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,qJCiBHC,EAdG,SAACC,GACjB,IAAIC,EAAc,GAClB,IAAK,IAAIC,KAAOF,EAAMG,YACpBF,EAAYG,KAAZ,GAAAC,OAAoBH,EAApB,MAAAG,OAA4BL,EAAMG,YAAYD,GAA9C,MAEF,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOZ,WACrBQ,EAAAC,EAAAC,cAAA,yBAAiBP,EAAYU,KAAK,OAClCL,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaR,EAAMY,MAAMC,QAAQ,8CCH3CC,8LAGFC,KAAKf,MAAMgB,cAAcD,KAAKf,MAAMiB,MAAOF,KAAKf,MAAMkB,yCAKtD,IAAIC,EACFb,EAAAC,EAAAC,cAAA,WACGO,KAAKf,MAAMmB,OAAOC,IAAK,SAAAC,GACtB,OAAOf,EAAAC,EAAAC,cAACV,EAAD,CAAWK,YAAakB,EAAMlB,YAAaS,MAAOS,EAAMT,MAAOV,IAAKmB,EAAMC,QAMvF,OAHIP,KAAKf,MAAMuB,UACbJ,EAASb,EAAAC,EAAAC,cAACgB,EAAA,EAAD,OAEJL,SAjBcM,aAoCVC,sBAfS,SAAAC,GACtB,MAAO,CACLR,OAAQQ,EAAMC,MAAMT,OACpBI,QAASI,EAAMC,MAAML,QACrBN,MAAOU,EAAME,KAAKZ,MAClBC,OAAQS,EAAME,KAAKX,SAII,SAAAY,GACzB,MAAO,CACLd,cAAe,SAACC,EAAOC,GAAR,OAAmBY,EAAUC,YAAYd,EAAOC,OAIpDQ,CAA8CM,YAAiBlB,EAAYmB","file":"static/js/3.52877e29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserOrder\":\"userOrder_UserOrder__3BpcQ\"};","import React from 'react';\r\n\r\nimport Styles from './userOrder.module.css';\r\n\r\nconst userOrder = (props) => {\r\n  let ingrsInline = [];\r\n  for (let key in props.ingredients) {\r\n    ingrsInline.push(`${key} (${props.ingredients[key]})`);\r\n  }\r\n  return(\r\n    <div className={Styles.UserOrder}>\r\n      <p>Ingredients: {ingrsInline.join(', ')}</p>\r\n      <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default userOrder;","import React, { Component } from 'react';\r\n\r\nimport UserOrder from '../../components/UserOrder';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner';\r\nimport { fetchOrders } from '../../store/actions';\r\n\r\nclass UserOrders extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    \r\n  }\r\n\r\n  render() {\r\n    let orders = (\r\n      <div>\r\n        {this.props.orders.map( order => {\r\n          return <UserOrder ingredients={order.ingredients} price={order.price} key={order.id} />\r\n        })}\r\n      </div>)\r\n    if (this.props.loading) {\r\n      orders = <Spinner />\r\n    }  \r\n    return orders;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.ordrs.orders,\r\n    loading: state.ordrs.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch( fetchOrders(token, userId) )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( withErrorHandler(UserOrders, axios) );\r\n"],"sourceRoot":""}