{"version":3,"sources":["components/UI/Input/index.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/Contact-data/Contact-data.module.css","components/Order/CheckoutSummary/index.js","../node_modules/react-router-dom/es/withRouter.js","containers/Checkout/Contact-data/index.js","containers/Checkout/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputStyles","Styles","InputElement","invalid","touched","push","Invalid","inputElement","a","createElement","Object","assign","onChange","changed","className","join","elementConfig","value","textarea","select","options","map","opt","key","displayValue","elementType","Input","Label","label","module","exports","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","es_withRouter","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","country","email","shippingMethod","formIsValid","orderHandler","event","preventDefault","formData","_this","orderToSend","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedForm","objectSpread","updatedEl","formValid","target","checkValidity","setState","_this2","this","inputFormArray","id","config","form","onSubmit","el","disabled","loading","Spinner","Component","connect","ordrs","auth","dispatch","purchaseBurger","withRouter","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","ingredientsRedux","Route","path","match","render","Contact_data","totalPriceRedux","purchaseDone","Redirect","to","ingrs","totalPrice","purchased"],"mappings":"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","file":"static/js/2.6f2dcf0a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Styles from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n  const inputStyles = [Styles.InputElement];\r\n\r\n  if (props.invalid && props.touched) {\r\n    inputStyles.push(Styles.Invalid);\r\n  }\r\n\r\n  const inputTypes = {\r\n    'input': <input onChange={props.changed} className={inputStyles.join(' ')} {...props.elementConfig} value={props.value}/>,\r\n    'textarea': <textarea onChange={props.changed} className={inputStyles.join(' ')} {...props.elementConfig} value={props.value}/>,\r\n    'select': (<select \r\n                onChange={props.changed} \r\n                className={inputStyles.join(' ')} \r\n                value={props.value} >\r\n                {(props.elementConfig && props.elementConfig.options) ? props.elementConfig.options.map( opt => {\r\n                  return <option value={opt.value} key={opt.value + opt.displayValue}>{opt.displayValue}</option>\r\n                })  : null}\r\n                </select>)\r\n  }\r\n  const inputElement = inputTypes[props.elementType];\r\n  return(\r\n    <div className={Styles.Input}>\r\n      <label className={Styles.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3OF9u\",\"Label\":\"Input_Label__H33s1\",\"InputElement\":\"Input_InputElement__2mJNY\",\"Invalid\":\"Input_Invalid__1c4t2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2afO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"Contact-data_ContactData__iLtSP\",\"Input\":\"Contact-data_Input__12v2V\"};","import React from 'react';\r\n\r\nimport Styles from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger';\r\nimport Button from '../../UI/Button';\r\n\r\nconst checkoutSummary = (props) => {\r\n  return (\r\n    <div className={Styles.CheckoutSummary}>\r\n      <h1>We hope you will enjoy our burger!</h1>\r\n      <div style={{width: '100%', margin: 'auto'}}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType='Danger' clicked={props.checkoutCancelled}>Back</Button>\r\n      <Button btnType='Success' clicked={props.checkoutContinued}>Continue</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default checkoutSummary;\r\n","// Written in this round about way for babel-transform-imports\nimport withRouter from \"react-router/es/withRouter\";\nexport default withRouter;","import React, { Component } from 'react'\r\n\r\nimport Button from '../../../components/UI/Button';\r\nimport Input from '../../../components/UI/Input';\r\nimport Spinner from '../../../components/UI/Spinner';\r\nimport Styles from './Contact-data.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler';\r\nimport { purchaseBurger } from '../../../store/actions/';\r\nimport { connect } from 'react-redux';\r\nimport { checkValidity } from '../../../shared/Utility';\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'number',\r\n          placeholder: 'ZIP code'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid:false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your email'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched: false\r\n      },\r\n      shippingMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [{value: 'fastest', displayValue: 'Fastest'},\r\n                    {value: 'cheapest', displayValue: 'Cheapest'}]\r\n        },\r\n        value: 'fastest'\r\n      }\r\n    },\r\n    formIsValid: false,\r\n  }\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let key in this.state.orderForm) {\r\n      formData[key] = this.state.orderForm[key].value;\r\n    }\r\n    // console.log(formData);\r\n    const orderToSend = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.price,\r\n      orderData:formData,\r\n      userId: this.props.userId\r\n    };\r\n    this.props.onOrderBurger(orderToSend, this.props.token);\r\n    \r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedForm = {...this.state.orderForm}\r\n    const updatedEl = {...updatedForm[inputIdentifier]}\r\n    let formValid = true;\r\n    updatedEl.value = event.target.value;\r\n\r\n    if (updatedEl.validation) {\r\n      updatedEl.valid = checkValidity(updatedEl.value, updatedEl.validation);       \r\n    }\r\n    // console.log(updatedEl.value, updatedEl.valid);\r\n    if (!updatedEl.touched) {\r\n      updatedEl.touched = true;\r\n    }\r\n    updatedForm[inputIdentifier] = updatedEl;\r\n    for (let key in updatedForm) {\r\n      if (updatedForm[key].validation && !updatedForm[key].valid) {\r\n        formValid = false;\r\n      }\r\n    }\r\n    \r\n    this.setState({orderForm: updatedForm, formIsValid: formValid} )\r\n  }\r\n\r\n  render() {\r\n    let inputFormArray = []\r\n    for (let key in this.state.orderForm) {\r\n      inputFormArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n    //console.log(inputFormArray);\r\n    let form = (<form onSubmit={this.orderHandler}>\r\n                  {inputFormArray.map( (el) =>{\r\n                    return <Input \r\n                        key={el.id} \r\n                        elementType={el.config.elementType} \r\n                        elementConfig={el.config.elementConfig} \r\n                        value={el.config.value}\r\n                        changed={(event) => this.inputChangedHandler(event, el.id)}\r\n                        invalid={el.config.validation ? !el.config.valid : false}\r\n                        touched={el.config.touched} />\r\n                  })}\r\n                  <Button btnType='Success' disabled={!this.state.formIsValid}>Order</Button>\r\n                </form>);\r\n    if (this.props.loading) {\r\n      form = <Spinner />\r\n    }\r\n    return(\r\n      <div className={Styles.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.ordrs.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) => dispatch(purchaseBurger(orderData, token) )\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withErrorHandler(ContactData, axios) ) );\r\n","import React, { Component } from 'react';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary';\r\nimport ContactData from './Contact-data';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  }\r\n\r\n  render() {\r\n    let summary = (\r\n      <div>\r\n        <CheckoutSummary \r\n        ingredients={this.props.ingredientsRedux}\r\n        checkoutCancelled={ this.checkoutCancelledHandler }\r\n        checkoutContinued={ this.checkoutContinuedHandler } />\r\n        <Route \r\n          path={this.props.match.path + '/contact-data'} \r\n          render={() => <ContactData ingredients={this.props.ingredientsRedux} price={this.props.totalPriceRedux} />} />\r\n      </div>)\r\n    if (this.props.purchaseDone || this.props.totalPriceRedux ===  4 ) {\r\n      summary = <Redirect to='/' />\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredientsRedux: state.ingrs.ingredients,\r\n    totalPriceRedux: state.ingrs.totalPrice,\r\n    purchaseDone: state.ordrs.purchased\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}