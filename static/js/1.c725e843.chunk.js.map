{"version":3,"sources":["components/UI/Input/index.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputStyles","Styles","InputElement","invalid","touched","push","Invalid","inputElement","a","createElement","Object","assign","onChange","changed","className","join","elementConfig","value","textarea","select","options","map","opt","key","displayValue","elementType","Input","Label","label","module","exports","Auth","state","controls","email","type","placeholder","validation","required","valid","password","minLength","submitEnabled","isSignup","inputChangedHandler","event","inputIdentifier","updatedForm","E_learning_React_burger_builder_with_saga_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_this","updatedEl","formValid","target","checkValidity","setState","submitHandler","preventDefault","onAuth","switchAuthMode","prevState","_this2","this","inputFormArray","id","config","form","react__WEBPACK_IMPORTED_MODULE_6___default","_components_UI_Input__WEBPACK_IMPORTED_MODULE_9__","authForm","Fragment","onSubmit","_components_UI_Button__WEBPACK_IMPORTED_MODULE_8__","btnType","disabled","clicked","loading","_components_UI_Spinner__WEBPACK_IMPORTED_MODULE_12__","error","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_13__","to","building","Component","connect","auth","token","ingrs","dispatch"],"mappings":"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","file":"static/js/1.c725e843.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Styles from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n  const inputStyles = [Styles.InputElement];\r\n\r\n  if (props.invalid && props.touched) {\r\n    inputStyles.push(Styles.Invalid);\r\n  }\r\n\r\n  const inputTypes = {\r\n    'input': <input onChange={props.changed} className={inputStyles.join(' ')} {...props.elementConfig} value={props.value}/>,\r\n    'textarea': <textarea onChange={props.changed} className={inputStyles.join(' ')} {...props.elementConfig} value={props.value}/>,\r\n    'select': (<select \r\n                onChange={props.changed} \r\n                className={inputStyles.join(' ')} \r\n                value={props.value} >\r\n                {(props.elementConfig && props.elementConfig.options) ? props.elementConfig.options.map( opt => {\r\n                  return <option value={opt.value} key={opt.value + opt.displayValue}>{opt.displayValue}</option>\r\n                })  : null}\r\n                </select>)\r\n  }\r\n  const inputElement = inputTypes[props.elementType];\r\n  return(\r\n    <div className={Styles.Input}>\r\n      <label className={Styles.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3OF9u\",\"Label\":\"Input_Label__H33s1\",\"InputElement\":\"Input_InputElement__2mJNY\",\"Invalid\":\"Input_Invalid__1c4t2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3xQiU\",\"Input\":\"Auth_Input__3bRQ5\"};","import React, { Component } from 'react';\r\nimport Styles from './Auth.module.css';\r\n\r\nimport Button from '../../components/UI/Button';\r\nimport Input from '../../components/UI/Input';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../store/actions/';\r\nimport Spinner from '../../components/UI/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { checkValidity } from '../../shared/Utility';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Email address'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid:false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          placeholder: 'Password'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid:false,\r\n        touched: false\r\n      }\r\n    },\r\n    submitEnabled: false,\r\n    isSignup: true\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedForm = {...this.state.controls}\r\n    const updatedEl = {...updatedForm[inputIdentifier]}\r\n    let formValid = true;\r\n    updatedEl.value = event.target.value;\r\n\r\n    if (updatedEl.validation) {\r\n      updatedEl.valid = checkValidity(updatedEl.value, updatedEl.validation);       \r\n    }\r\n    // console.log(updatedEl.value, updatedEl.valid);\r\n    if (!updatedEl.touched) {\r\n      updatedEl.touched = true;\r\n    }\r\n    updatedForm[inputIdentifier] = updatedEl;\r\n    for (let key in updatedForm) {\r\n      if (updatedForm[key].validation && !updatedForm[key].valid) {\r\n        formValid = false;\r\n      }\r\n    }    \r\n    this.setState({controls: updatedForm, submitEnabled: formValid} )\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n  }\r\n\r\n  switchAuthMode = () => {\r\n    this.setState(prevState => {\r\n      return {isSignup: !prevState.isSignup}\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let inputFormArray = []\r\n    for (let key in this.state.controls) {\r\n      inputFormArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n\r\n    const form = inputFormArray.map(inputElement => (\r\n      <Input \r\n        className={Styles.Input}\r\n        key={inputElement.id} \r\n        elementType={inputElement.config.elementType} \r\n        elementConfig={inputElement.config.elementConfig} \r\n        value={inputElement.config.value}\r\n        changed={(event) => this.inputChangedHandler(event, inputElement.id)}\r\n        invalid={inputElement.config.validation ? !inputElement.config.valid : false}\r\n        touched={inputElement.config.touched} />\r\n    ))\r\n    let authForm = (\r\n        <> \r\n          <form onSubmit={this.submitHandler}>\r\n           {form}\r\n           <Button btnType='Success' disabled={!this.state.submitEnabled}>Submit</Button> \r\n          </form>\r\n          <Button btnType='Danger' clicked={this.switchAuthMode}>Switch to {this.state.isSignup ? 'Sign In' : 'Sign Up'}</Button>\r\n          <p>Current mode: {this.state.isSignup ? 'Sign Up' : 'Sign In'}</p>\r\n        </>);\r\n    if (this.props.loading) {\r\n      authForm = <Spinner />\r\n    }\r\n\r\n    return (\r\n      <div className={Styles.Auth}>\r\n        {this.props.error &&\r\n          <h3>\r\n            {this.props.error}\r\n          </h3>\r\n        }\r\n        {authForm}\r\n        {this.props.isAuthenticated &&\r\n          <Redirect to={this.props.building ? '/checkout' : '/'} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== '',\r\n    building: state.ingrs.building\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignup) => dispatch( auth(email, password, isSignup) )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( Auth );\r\n"],"sourceRoot":""}